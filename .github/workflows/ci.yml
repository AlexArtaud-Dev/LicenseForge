name: LicenceForge CI/CD

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: licenceforge
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      rabbitmq:
        image: rabbitmq:3-management-alpine
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "rabbitmq-diagnostics -q check_running"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Run tests
        run: mvn test

      - name: Generate test coverage report
        run: mvn jacoco:report

      - name: Upload test coverage report
        uses: actions/upload-artifact@v3
        with:
          name: test-coverage-report
          path: target/site/jacoco/

#  docker:
#    needs: build
#    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_TOKEN }}
#
#      - name: Extract branch name
#        shell: bash
#        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
#        id: extract_branch
#
#      - name: Build and push
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          push: true
#          tags: |
#            ${{ secrets.DOCKER_HUB_USERNAME }}/licenceforge:latest
#            ${{ secrets.DOCKER_HUB_USERNAME }}/licenceforge:${{ steps.extract_branch.outputs.branch }}
#          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/licenceforge:buildcache
#          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/licenceforge:buildcache,mode=max

#  deploy:
#    needs: docker
#    if: github.ref == 'refs/heads/main'
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Deploy to production
#        run: echo "Deploying to production server..."
#        # Here you would add your actual deployment steps
#        # For example, SSH into server and pull latest Docker image
#        # or update a Kubernetes deployment